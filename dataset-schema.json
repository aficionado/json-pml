{
  "description":"Metadata specifying a dataset",
  "type":"object",
  "properties":{
    "dataset":{
      "type":"object",
      "properties":{
        "header":{
          "description":"Whether the CSV contains a header",
          "default":true,
          "type":"boolean"
        },
        "trim":{
          "description":"Whether to trim field strings",
          "default":true,
          "type":"boolean"
        },
        "separator":{
          "description":"The CSV separator character",
          "default":",",
          "type":"string"
        },
        "quote":{
          "description":"The CSV quote character",
          "default":"\"",
          "type":"string"
        },
        "locale":{
          "description":"Default locale for field values",
          "type":"string"
        },
        "datasource_id":{
          "description":"Identifier of this dataset's datasource",
          "type":"string"
        },
        "row_filter":{
          "description":"Expression specifying the rows to be included in the
                         dataset",
          "type":["array", "string"]
        },
        "datasink":{
          "description":"URI of the datastore used for this dataset",
          "type":"string"
        },
        "byte_limit":{
          "description":"Number of decompressed bytes from the source to use.",
          "minimum":0,
          "type":"number"
        },
        "used_bytes":{
          "description":"Number of source bytes serialized",
          "minimum":0,
          "type":"integer"
        },
        "missing_tokens":{
          "description":"Default tokens that represent a missing value",
          "type":"array",
          "items":"string"
        },
        "term_limit":{
          "description":"The maximum number of terms to be selected
                         when performing text analysis.",
          "default":500,
          "type":"integer"
        },
        "origin_id":{
          "description":"Identifier of the dataset to be cloned",
          "type":"string"
        },
        "sample":{
          "$ref":"sample-schema.json"
        },
        "row_range":{
          "$ref":"row-range-schema.json"
        },
        "callbacks":{
          "$ref":"callbacks-schema.json"
        },
        "fields":{
          "description":"Possibly partial list of fields for this data",
          "$ref":"field-coll-schema.json"
        },
        "input_fields":{
          "description":"List of datasource field identifiers to use",
          "type":"array",
          "items":{"type":"string"}
        },
        "excluded_input_fields":{
          "description":"List of field identifiers to exclude from inputs",
          "type":"array",
          "items":"string"
        },
        "output_fields":{
          "$ref":"output-fields-schema.json"
        },
        "input_offset":{
          "description":"Number of rows to skip to start field generation.",
          "type":"integer",
          "minimum":0,
          "default":0
        },
        "input_step":{
          "description":"Step when traversing input rows to generate fields.",
          "type":"integer",
          "minimum":1,
          "default":1
        },
        "output_row_filter":{
          "description":"Expression specifying the generated rows to be
                         included in the dataset",
          "type":["array", "string"]
        },
        "objective":{
          "description":"Descriptor of the field that should be used as
                         objective field by default, including its id",
          "$ref":"generic-field-schema.json"
        }
      }
    }
  }
}
